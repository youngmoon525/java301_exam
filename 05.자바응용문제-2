1.MemberServiceExample <- Class를 하나 만들고 내부에 main 메소드를 만든다.

 아래 해당하는 코드를 main메소드에 구현하여 오류 없이 프로그램이 진행 되게 MemberService class를 역으로 만들어 보기.
 -1.MemberService는 반드시 String id , String pw를 입력받아야만 생성할수있게 만든다.
 -2.MemberService의 login메소드는 입력 된 id와pw 는 hong , 12345가 입력 되면 true 그 외엔 false를 return하는 메소드 입니다.
 -3.MemberService의 logout메소드는 입력 된 id값을 이용하여 "id"님이 로그 아웃 되었습니다를 출력하는 메소드 입니다.
 
==================메인 메소드 내용==================    ==================    ==================  ==================    ==================               
public class MemberServiceExample {
	public static void main(String[] args) {                         //결과 (hong ,12345입력)           결과(1.2 입력)
		Scanner scan = new Scanner(System.in);                         //로그인 되었습니다.               id 또는 password가 올바르지 않습니다.
		MemberService memberService = new MemberService();             //로그아웃 되었습니다. 
		String userId = scan.nextLine();                              
		String userPw = scan.nextLine();                            
		
		if( memberService.login(userId, userPw)) {
			System.out.println("로그인 되었습니다.");
			memberService.logout(userId);
		} else {
			System.out.println("id 또는 password가 올바르지 않습니다.");
		}
	}
}
====================================================================    ==================    ==================    ==================    


2. 자신의 이니셜 + PrinterExample Class를 하나 만들고 내부에 main 메소드를 만든다.

아래 해당하는 코드를 이용하여 main메소드 실행 시 출력 결과를 얻을 수 있는 프로그램을 작성하세요.
==================메인 메소드 내용==================    ==================    ==================  ==================    ==================    
public class KymPrinterExample {
	public static void main(String[] args) {        //출력 결과
		Printer.println(10);                          //10
		Printer.println(true);	                      //true		
		Printer.println(5.7);                         //5.7
		Printer.println("홍길동");                    //홍길동	   
		                                			
	}
}
====================================================================    ==================    ==================    ==================    


3.배열 게임
배열과 Random 클래스를 사용하여 다음과 같은 결과가 나오는 게임을 만듭니다.
  -1.난이도를 입력 받습니다. 1이상의 숫자는 전부 가능함 (ex . 10입력 시 10의 크기를 가지는 배열을 생성)
  -2.입력 받은 난이도를 이용하여 배열을 생성하고 배열의 임의의 index에 숫자를 숨깁니다.  (ex 10의크기의 배열 index에 답을 숨김 { [] [] [] [답] [] [] [] [] [] [] [] } )
  -3.사용자에게 숫자를 입력받아 답이 입력 된 index가 맞는지를 체크하며 정답을 맞출때까지 게임은 계속 됩니다. (ex 1입력 현재 답은 4번째 칸에 있음 , 다시시도..)
  -4.사용자가 정답을 입력 한 경우 몇번 시도했는지를 보여주며 게임을 끝냅니다. ( 3번 시도 하셨습니다.)
====================================콘솔====================================   
난이도를 입력해주세요 1~ 아무숫자 가능
10
숫자 입력 완료
답을 맞춰주세요 
1
답을 맞춰주세요 
2
답을 맞춰주세요 
4
정답 : 3번 시도 하셨습니다.
======================================================================== 



4.Class 생성하기
-다음과 같은 생성자와 필드를 사용할수있는 Class TestClass를 만들고 이를 이용하여 콘솔창에 결과가 출력 되게끔 프로그램 작성하기.
	
  생성자 : TestClass tClass = new TestClass(new A("필드") , new B(1,2) );
	    	
====================================콘솔====================================   
필드 
1
2
====================================++====================================   








5.다음은 Android를 이용하여 맨처음 코딩을 시작하면 볼 수 있는 화면 이다.
다음과같은 코드가 오류없이 되게끔 프로그램을 작성해보기.

public class MainActivity extends AppCompatActivity {

	@Override
	protected void onCreate(String savedInstanceState) {

		super.onCreate(savedInstanceState);
		setContentView(R.id.activity_main);
	}
}




